trigger:
  branches:
    include:
      - 'feature/*'
      - 'main'

pr:
  branches:
    include:
      - 'main'

pool: bipinpool

stages:
# Stage 1: Terraform Plan
- stage: TerraformPlan
  displayName: "Terraform Init and Plan"
  condition: startsWith(variables['Build.SourceBranch'], 'refs/heads/feature/')
  jobs:
  - job: TerraformPlan
    displayName: "Terraform Plan Job"
    steps:
    - task: tfsec@1
      inputs:
        version: 'v1.26.0'
        dir: '$(System.DefaultWorkingDirectory)/env/dev/'
    - task: TerraformTaskV4@4
      inputs:
        provider: 'azurerm'
        command: 'init'
        workingDirectory: '$(System.DefaultWorkingDirectory)/env/dev/'
        backendServiceArm: 'new-sc-bk'
        backendAzureRmResourceGroupName: 'dev-rg1'
        backendAzureRmStorageAccountName: 'devstgacbk01'
        backendAzureRmContainerName: 'devcont'
        backendAzureRmKey: 'bk1.terraform.tfstate'
    - task: TerraformTaskV4@4
      inputs:
        provider: 'azurerm'
        command: 'plan'
        workingDirectory: '$(System.DefaultWorkingDirectory)/env/dev/'
        environmentServiceNameAzureRM: 'new-sc-bk'

# Stage 2: Terraform Apply
- stage: TerraformApply
  displayName: "Terraform Apply"
  dependsOn: TerraformPlan
  condition: and(succeeded(), eq(variables['Build.Reason'], 'PullRequestMerged'), eq(variables['Build.SourceBranchName'], 'main'))
  jobs:
  - job: ManualValidation
    displayName: "Manual Validation"
    steps:
    - task: ManualValidation@1
      inputs:
        notifyUsers: 'approdds@ad'  # Replace with actual approvers
        instructions: 'Please review the Terraform plan and approve to proceed.'

  - job: TerraformApply
    dependsOn: ManualValidation
    displayName: "Terraform Apply Job"
    condition: succeeded()
    steps:
    - task: TerraformTaskV4@4
      inputs:
        provider: 'azurerm'
        command: 'init'
        workingDirectory: '$(System.DefaultWorkingDirectory)/env/dev/'
        backendServiceArm: 'infra-pipeline-azure'
        backendAzureRmResourceGroupName: 'dev-rg1'
        backendAzureRmStorageAccountName: 'devstgacbk01'
        backendAzureRmContainerName: 'devcont'
        backendAzureRmKey: 'bk1.terraform.tfstate'
    - task: TerraformTaskV4@4
      inputs:
        provider: 'azurerm'
        command: 'apply'
        workingDirectory: '$(System.DefaultWorkingDirectory)/env/dev/'
        environmentServiceNameAzureRM: 'new-sc-bk'
