parameters: 
- name: name
  type: string

variables:
  workingDirectory: '$(System.DefaultWorkingDirectory)/env/${{ parameters.name }}'
  backendServiceArm: 'new-sc-bk'
  backendAzureRmResourceGroupName: 'dev-rg1'
  backendAzureRmStorageAccountName: 'devstgacbk01'
  backendAzureRmContainerName: 'devcont'
  backendAzureRmKey: '${{ parameters.name }}.terraform.tfstate'

stages:
- stage: TerraformInitPlan
  displayName: Terraform Init Plan
  jobs:
  - job: TerraformInitPlan
    displayName: "Terraform Init and Plan"
    steps:
    - task: tfsec@1
      inputs:
        version: 'v1.26.0'
        dir: $(workingDirectory)
    - task: TerraformTaskV4@4
      inputs:
        provider: 'azurerm'
        command: 'init'
        workingDirectory: $(workingDirectory)
        backendServiceArm: $(backendServiceArm)
        backendAzureRmResourceGroupName: $(backendAzureRmResourceGroupName)
        backendAzureRmStorageAccountName: $(backendAzureRmStorageAccountName)
        backendAzureRmContainerName: $(backendAzureRmContainerName)
        backendAzureRmKey: $(backendAzureRmKey)
    - task: TerraformTaskV4@4
      inputs:
        provider: 'azurerm'
        command: 'plan'
        workingDirectory: $(workingDirectory)
        environmentServiceNameAzureRM: $(backendServiceArm)

- stage: ManualValidationTerraformApply
  displayName: "Manual Validation and Terraform Apply"
  dependsOn: TerraformInitPlan
  jobs:
  - job: manualvalidation
    displayName: Manual Validation
    steps:
    - task: ManualValidation@1
      inputs:
        notifyUsers: 'valid-email@example.com'
  - job: terraformapply
    displayName: "Terraform Apply"
    dependsOn: manualvalidation
    steps:
    - task: TerraformTaskV4@4
      inputs:
        provider: 'azurerm'
        command: 'init'
        workingDirectory: $(workingDirectory)
        backendServiceArm: $(backendServiceArm)
        backendAzureRmResourceGroupName: $(backendAzureRmResourceGroupName)
        backendAzureRmStorageAccountName: $(backendAzureRmStorageAccountName)
        backendAzureRmContainerName: $(backendAzureRmContainerName)
        backendAzureRmKey: $(backendAzureRmKey)
    - task: TerraformTaskV4@4
      inputs:
        provider: 'azurerm'
        command: 'apply'
        workingDirectory: $(workingDirectory)
        environmentServiceNameAzureRM: $(backendServiceArm)
